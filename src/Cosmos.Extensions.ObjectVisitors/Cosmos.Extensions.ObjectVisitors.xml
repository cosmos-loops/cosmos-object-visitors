<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.ObjectVisitors</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Reflection.Core.CompatibleObjectCaller`1">
            <summary>
            A compatible object caller for Cosmos
            </summary>
        </member>
        <member name="M:Cosmos.Reflection.Core.CoreCallerBase.New">
            <summary>
            如果不是静态类，可以新建一个实例
            </summary>
        </member>
        <member name="M:Cosmos.Reflection.Core.CoreCallerBase.Get``1(System.String)">
            <summary>
            通过指定泛型以及成员名反射出强类型的字段或者属性值
            </summary>
            <typeparam name="T">字段/属性的类型</typeparam>
            <param name="name">字段/属性名</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Reflection.Core.CoreCallerBase.Set(System.String,System.Object)">
            <summary>
            通过指定泛型以及成员名设置字段或者属性值
            </summary>
            <param name="name">字段/属性名</param>
            <param name="value">字段/属性新值</param>
        </member>
        <member name="M:Cosmos.Reflection.Core.TypeHelpers.TypeAccessorExtensions.CreateTypeAccessor(System.Type)">
            <summary>
            Create TypeAccessor
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Reflection.Core.TypeHelpers.TypeAccessorExtensions.CreateTypeAccessor(System.Type,System.Boolean)">
            <summary>
            Create TypeAccessor
            </summary>
            <param name="type"></param>
            <param name="allowNonPublicAccessors"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Reflection.Metadata.AlgorithmKind">
            <summary>
            Kind of algorithm to find tree
            </summary>
        </member>
    </members>
</doc>
